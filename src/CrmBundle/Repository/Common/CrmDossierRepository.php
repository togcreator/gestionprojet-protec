<?php

namespace CrmBundle\Repository\Common;
use Doctrine\ORM\Query\Expr\Join;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CrmDossierRepository extends \Doctrine\ORM\EntityRepository
{
	/**
     * Find all by user_id and bu_id if exists
     */
    public function findAllBy ($user_id, $bu_id = 0, $criter = array()) {

        $return = $this->createQueryBuilder('c')->select('c');
        if( count($criter) ) {
            foreach( $criter as $key => $value ) {
                $return
                    ->andWhere("c.$key = :" . strtolower($key))
                    ->setParameter(strtolower($key), $value);
            }
        }

        if( $user_id ){
            $return
                ->innerJoin('UsersBundle:UserClient', 'u', Join::WITH, 'c.idCreateur = u.id')
                ->innerJoin('UsersBundle:Users', 'us', Join::WITH, 'us.id = u.iDCompte')
                ->andWhere('u.id = :user_id')
                ->setParameter('user_id', $user_id);
        }

        if( $bu_id ) {
             $return
                ->innerJoin('UsersBundle:RelationBusinessEntite', 'rbe', Join::WITH, 'rbe.iDentite = c.idEntiteJ')
                ->andWhere('rbe.iDBusinessUnit = :bu_id')
                ->setParameter('bu_id', $bu_id);
        }

        return $return->getQuery()->execute();
    }

	    // for searching
    public function findBySearch ($crm = [], $etapes = [], $operations = [], $date = [], $lib = 'lib0')
    {
        $array = [];
        $string = ['label', 'object', 'objet'];

        /* flag pour etape et opÃ©rations */
        $isEtape = false;
        $isOperation = false;

        // extract crm
        if(count($crm))
            foreach($crm as $key => $value) {
                //==============================
                if( 'contact' == $key || 'idBusinessUnit' == $key || 'idRelationProfessionnelles'== $key ) continue;

                if( in_array($key, $string) && $value && $key != 'tri') {
                    $array[] = "p.$lib like :label";
                }
                elseif( $value && $value != 0 && (strpos($key, 'date') === false) )
                    $array[] = "p.$key = :$key";
            }

        // extract crm
        if(count($etapes)) {
            foreach($etapes as $key => $value) {
                if( in_array($key, $string) && $value ) {
                    $array[] = "e.object like :label";
                    $isEtape = true;
                }
                elseif( $value && $value != 0 && (strpos($key, 'date') === false) ) {
                    $array[] = "e.$key = :$key";
                    $isEtape = true;   
                }
            }

            if( ($etapes['datedebutPrevue'] != "0000-00-00" && !empty($etapes['datedebutPrevue']))
             && (!empty($etapes['datefinPrevue']) && $etapes['datefinPrevue'] != "0000-00-00") ) 
            {
                $array[] = "( e.datedebutprevue BETWEEN :datedebutPrevueE AND :datefinPrevueE )";
                $array[] = "( e.datefinprevue BETWEEN :datedebutPrevueE AND :datefinPrevueE )";
                $isEtape = true;
            }
        }

        // extract crm
        if(count($operations)) {
            foreach($operations as $key => $value) {
                if( in_array($key, $string) ) {
                    $array[] = "o.object like :label";
                    $isOperation = true;
                }
                elseif( $value && $value != 0 && (strpos($key, 'date') === false)) {
                    $array[] = "o.$key = :$key";
                    $isOperation = true;
                }
            }

            if( (!empty($operations['datedebutPrevue']) && $operations['datedebutPrevue'] != "0000-00-00") 
                && (!empty($operations['datefinPrevue']) && $operations['datefinPrevue'] != "0000-00-00") )
            {
                $array[] = "( o.datedebutprevue BETWEEN :datedebutPrevueO AND :datefinPrevueO )";
                $array[] = "( o.datefinprevue BETWEEN :datedebutPrevueO AND :datefinPrevueO )";
                $isOperation = true;
            }
        }

        $crms = $this->createQueryBuilder('p')->select('p');

        //============================= user contact ====================================
        $contact = (array_key_exists('contact', $crm) && $crm['contact']);
        $idBusinessUnit = (array_key_exists('idBusinessUnit', $crm) && $crm['idBusinessUnit']);
        $idRelationProfessionnelles = (array_key_exists('idRelationProfessionnelles', $crm) && $crm['idRelationProfessionnelles']);

        //================= 1 des 3 ==================
        if( ($contact || $idBusinessUnit || $idRelationProfessionnelles) ) 
        {
            // $crms->innerJoin('CrmBundle:Common\CrmUsers', 'pv', Join::WITH, 'pv.idCRM = p.id');
            // $crms->innerJoin('UsersBundle:UserClient', 'u', Join::WITH, 'pv.idUser = u.id');
            // $crms->innerJoin('UsersBundle:RelationBusinessUser', 'ru', Join::WITH, 'ru.iDUser = u.id');
            $crms->innerJoin('UsersBundle:RelationBusinessEntite', 'r', Join::WITH, 'r.iDentite = p.idEntiteJ');
            
            // c => id == pu => idUser
            // rbu => idUser == c => id
            // rbe => idBusinessUnit == rbu => idBusinessUnit
        }

        // for etapes
        if( $isEtape )
            $crms->innerJoin('CrmBundle:Common\CrmEtapes', 'e', Join::WITH, 'e.idCRM = p.id');

        // for operations
        if( $isOperation )
            $crms->innerJoin('CrmBundle:Common\CrmEtapesOperations', 'o', Join::WITH, 'o.idCRM = p.id');

        // where condition
        if( count($array) )
            $crms->where(implode(' AND ', $array));

        //=========================
        if( !($contact && $idBusinessUnit && $idRelationProfessionnelles) ) {

            // if( $contact )
            //     $crms->andWhere('pv.idUser = :contact AND u.iDNatureUser = 2');
            if( $idBusinessUnit )
                $crms->andWhere('r.iDBusinessUnit = :idBusinessUnit');
            if( $idRelationProfessionnelles )
                $crms->andWhere('r.iDRelationsProfessionnelles = :idRelationProfessionnelles');

            if( $contact ) {
                $crms->setParameter('contact', $crm['contact']);
            }
            if( $idBusinessUnit ) {
                $crms->setParameter('idBusinessUnit', $crm['idBusinessUnit']);
            }
            if( $idRelationProfessionnelles ) {
                $crms->setParameter('idRelationProfessionnelles', $crm['idRelationProfessionnelles']);
            }
        }else {
            $crms->andWhere(/*'pv.idUser = :contact AND */' us.iDNatureUser = 2 AND r.iDBusinessUnit = :idBusinessUnit AND r.iDRelationsProfessionnelles = :idRelationProfessionnelles');
            $crms->setParameters([
                // 'contact' => $crm['contact'],
                'iDBusinessUnit' => $crm['idBusinessUnit'],
                'iDRelationsProfessionnelles' => $crm['idRelationProfessionnelles']
            ]);
        }

        // setting parameter
        if(count($crm))
            foreach( $crm as $key => $value ) {
                if( $value && $value !== 0  && (strpos($key, 'date') === false) && $key != 'tri' )
                    $crms->setParameter(in_array($key, $string) ? 'label' : $key, in_array($key, $string) ? "'%$value%'" : $value);
            }

        if(count($etapes)) {
            foreach( $etapes as $key => $value )
                if( $value && $value !== 0  && (strpos($key, 'date') === false) )
                    $crms->setParameter(in_array($key, $string) ? 'label' : $key, in_array($key, $string) ? "'%$value%'" : $value);

            // date
            if( ($etapes['datedebutPrevue'] != "0000-00-00" && !empty($etapes['datedebutPrevue']))
             && (!empty($etapes['datefinPrevue']) && $etapes['datefinPrevue'] != "0000-00-00") ) 
            { 
                $crms->setParameter('datedebutPrevueE', date('Y-m-d', strtotime($etapes['datedebutPrevue'])));
                $crms->setParameter('datefinPrevueE', date('Y-m-d', strtotime($etapes['datefinPrevue'])));
            }
        }   

        if(count($operations)) {
            foreach( $operations as $key => $value )
                if( $value && $value !== 0  && (strpos($key, 'date') === false) )
                    $crms->setParameter(in_array($key, $string) ? 'label' : $key, in_array($key, $string) ? "'%$value%'" : $value);

            // date
            if( (!empty($operations['datedebutPrevue']) && $operations['datedebutPrevue'] != "0000-00-00") 
                && (!empty($operations['datefinPrevue']) && $operations['datefinPrevue'] != "0000-00-00") )
            {
                $crms->setParameter('datedebutPrevueO', date('Y-m-d', strtotime($operations['datedebutPrevue'])));
                $crms->setParameter('datefinPrevueO', date('Y-m-d', strtotime($operations['datefinPrevue'])));
            }
        }

        /* pour tri */
        if( !empty($crm['tri']) || $crm['tri'] != 0 )
	        $crms->orderBy( $crm['tri'] );

        // execute this
        $return = $crms->getQuery()->execute();
        return $return;
    }


    
}
