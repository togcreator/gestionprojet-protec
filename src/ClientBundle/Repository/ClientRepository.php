<?php

namespace ClientBundle\Repository;
use Doctrine\ORM\Query\Expr\Join;

/**
 * ClientRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ClientRepository extends \Doctrine\ORM\EntityRepository
{
    public function count($data) {
        $qb = $this->createQueryBuilder('c');
        $qb->select($qb->expr()->count('c'));
        $query = isset($data['query']) && $data['query']?$data['query']:null;
        if($query) {
            $qb->andWhere('c.raisonSociale like :query OR c.adr1 like :query OR c.adr2 like :query OR c.ville like :query')
                ->setParameter('query', "%".$query."%");
        }
        return (int) $qb->getQuery()->getSingleScalarResult();
    }
    public function search($data, $page = 0, $max = NULL, $getResult = true) {
        $qb = $this->_em->createQueryBuilder();
        $query = isset($data['query']) && $data['query']?$data['query']:null;
        $qb->select('c')
            ->from('ClientBundle:Client', 'c');
        if($query) {
            $qb->andWhere('c.raisonSociale like :query OR c.adr1 like :query OR c.adr2 like :query OR c.ville like :query')
                ->setParameter('query', "%".$query."%");
        }
        if($max) {
            $preparedQuery = $qb->getQuery()
                ->setMaxResults($max)
                ->setFirstResult($page * $max);
        }
        else {
            $preparedQuery = $qb->getQuery();
        }
        return $getResult?$preparedQuery->getResult():$preparedQuery;
    }

    // findByBU
    // RelatinBusinessEntite
    public function findByBU ($bu_id) {
        $client = $this->createQueryBuilder('c')
            ->select('rbe as relationBusinessEntite', 'upp.id')
            ->innerJoin('UsersBundle:RelationBusinessEntite', 'rbe', Join::WITH, 'rbe.iDentite = c.id')
            ->leftJoin('UsersBundle:BusinessUnit', 'bu', Join::WITH, 'bu.id = rbe.iDBusinessUnit')
            ->leftJoin('UsersBundle:Back\UsersParamRelationsProfessionnelles', 'upp', Join::WITH, 'upp.id = rbe.iDRelationsProfessionnelles');
            
        if( $bu_id ) { // admin
            $client->andWhere('rbe.iDBusinessUnit = :bu_id');
            $client->setParameter('bu_id', $bu_id);
        }
        $return = $client->getQuery()->execute();
        return $return;
    }


    public function filterBy ($bu_id, $data) {

        $id_statut = $data['idStatut'];
        $id_cp = $data['cp'];
        // $id_entitej = $data['idEntiteJ'];
        $id_owner = $data['idOwner'];
        $id_watcher = $data['idWatcher'];

        $client = $this->createQueryBuilder('c')
            ->select('rbe', 'upp.id')
            ->innerJoin('UsersBundle:RelationBusinessEntite', 'rbe', Join::WITH, 'rbe.iDentite = c.id')
            ->innerJoin('UsersBundle:BusinessUnit', 'bu', Join::WITH, 'bu.id = rbe.iDBusinessUnit')
            ->innerJoin('UsersBundle:Back\UsersParamRelationsProfessionnelles', 'upp', Join::WITH, 'upp.id = rbe.iDRelationsProfessionnelles');

        //============ WHERE ====================
        if( $id_owner || $id_watcher || $id_statut )
            $client->innerJoin('CrmBundle:Common\CrmDossier', 'crm', Join::WITH, 'c.id = crm.idEntiteJ');

        // if( $id_entitej )
        //     $client->andWhere('c.id = :id_entitej');
        if( $id_cp )
            $client->andWhere('c.cp = :id_cp');

        $client->andWhere('(upp.id = 1 or upp.id = 2)');

        if( $id_statut )
            $client->andWhere('crm.statut = :id_statut');
        if( $id_owner )
            $client->andWhere('crm.idOwner = :id_owner');
        if( $id_watcher )
            $client->andWhere('crm.idWatcher = :id_watcher');
        //========================================

        // param
        // if( $id_entitej )
        //     $client->setParameter('id_entitej', $id_entitej);
        if( $id_cp )
            $client->setParameter('id_cp', $id_cp);
        if( $id_statut )
            $client->setParameter('id_statut', $id_statut);
        if( $id_owner )
            $client->setParameter('id_owner', $id_owner);
        if( $id_watcher )
            $client->setParameter('id_watcher', $id_watcher);

        if( $bu_id ) { // admin
            $client->andWhere('rbe.iDBusinessUnit = :bu_id');
            $client->setParameter('bu_id', $bu_id);
        }

        $return = $client->getQuery()->execute();
        return $return;
    }
}
