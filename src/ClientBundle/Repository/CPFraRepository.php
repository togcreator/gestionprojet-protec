<?php

namespace Protec\ClientBundle\Repository;

/**
 * CPFraRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CPFraRepository extends \Doctrine\ORM\EntityRepository
{
    public function count($data) {
        $qb = $this->createQueryBuilder('c');
        $qb->select($qb->expr()->count('c'));
        $query = isset($data['query']) && $data['query']?$data['query']:null;
        if($query) {
            $qb->andWhere('c.ville like :query OR c.code like :query')
                ->setParameter('query', "%".$query."%");
        }
        return (int) $qb->getQuery()->getSingleScalarResult();
    }
    public function search($data, $page = 0, $max = NULL, $getResult = true) {
        $qb = $this->_em->createQueryBuilder();
        $query = isset($data['query']) && $data['query']?$data['query']:null;
        $qb->select('c')
            ->from('ClientBundle:CPFra', 'c');
        if($query) {
            $qb->andWhere('c.ville like :query OR c.code like :query')
                ->setParameter('query', "%".$query."%");
        }
        if($max) {
            $preparedQuery = $qb->getQuery()
                ->setMaxResults($max)
                ->setFirstResult($page * $max);
        }
        else {
            $preparedQuery = $qb->getQuery();
        }
        return $getResult?$preparedQuery->getResult():$preparedQuery;
    }
}
